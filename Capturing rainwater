function efficientSolution(heights) {
  let totalWater = 0;
  let leftPointer = 0;
  let rightPointer = heights.length - 1;
  let leftBound = 0;
  let rightBound = 0;
  
  while (leftPointer < rightPointer) {
    if (heights[leftPointer] <= heights[rightPointer]) { //     if the element is larger than leftBound,
      leftBound = Math.max(heights[leftPointer], leftBound);      //  set leftBound to the element
      totalWater += leftBound - heights[leftPointer]; //     add the difference between leftBound and the element at leftPointer to totalWater
      leftPointer++;                                          //     move leftPointer forward by one
    } else {                                                      //     if the element is larger than rightBound, 
      rightBound = Math.max(heights[rightPointer], rightBound);   //     set rightBound to the element
      totalWater += rightBound - heights[rightPointer];           //    add the difference between rightBound and the element at rightPointer to totalWater
      rightPointer--;                                             //    move rightPointer back by one 
    }
  }
  return totalWater;
}

const testArray = [4, 2, 1, 3, 0, 1, 2];
console.log(efficientSolution(testArray));

// Leave this so that we can test your code:
module.exports = efficientSolution;
